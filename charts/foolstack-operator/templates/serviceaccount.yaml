---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "foolstack-operator.serviceAccountName" . }}
  labels:
    {{- include "foolstack-operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: foolstack-operator-role
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]
  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]
  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
  # Application: read-only access for watching cluster-wide.
  - apiGroups: [yannic.codes]
    resources: [ postgresqlservices ]
    verbs: [list, watch, patch]
  # Allow to create secrets
  - apiGroups: [ "" ]
    resources: [ secrets ]
    verbs: [ get,   create, list, patch, delete ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: foolstack-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: foolstack-operator-role
subjects:
  - kind: ServiceAccount
    name: {{ include "foolstack-operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}